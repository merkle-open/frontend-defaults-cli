// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`webpack default 1`] = `
"{
  \\"options\\": {
    \\"ts\\": false,
    \\"typescriptEslint\\": false,
    \\"es\\": false,
    \\"eslint\\": false,
    \\"editorconfig\\": false,
    \\"prettier\\": false,
    \\"stylelint\\": false,
    \\"gitignore\\": false,
    \\"npmrc\\": false,
    \\"readme\\": false,
    \\"githooks\\": false,
    \\"commitlint\\": false,
    \\"nodeVersion\\": false,
    \\"webpack\\": true,
    \\"build\\": false,
    \\"install\\": false,
    \\"force\\": true,
    \\"dryRun\\": false,
    \\"mode\\": \\"api\\"
  },
  \\"mergedFiles\\": {
    \\"package.json\\": {
      \\"override\\": false,
      \\"data\\": {
        \\"browserslist\\": [
          \\"> 1%\\",
          \\"last 2 versions\\",
          \\"not ie <= 10\\"
        ],
        \\"scripts\\": {
          \\"build\\": \\"webpack --mode production\\",
          \\"postinstall\\": \\"npm rebuild node-sass\\",
          \\"start\\": \\"webpack-dev-server --mode development\\"
        },
        \\"devDependencies\\": {
          \\"@babel/core\\": \\"7.4.3\\",
          \\"@babel/plugin-proposal-decorators\\": \\"7.4.0\\",
          \\"@babel/plugin-syntax-dynamic-import\\": \\"7.2.0\\",
          \\"@babel/preset-env\\": \\"7.4.3\\",
          \\"@babel/preset-react\\": \\"7.0.0\\",
          \\"asset-config-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"clean-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"html-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"scss-config-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"webpack\\": \\"0.1.0-mock\\",
          \\"webpack-cli\\": \\"0.1.0-mock\\",
          \\"webpack-dev-server\\": \\"0.1.0-mock\\"
        },
        \\"dependencies\\": {
          \\"@babel/polyfill\\": \\"7.4.3\\"
        }
      }
    },
    \\"webpack.config.js\\": {
      \\"override\\": false,
      \\"data\\": \\"const AssetConfigWebpackPlugin = require('asset-config-webpack-plugin');\\\\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\\\\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\\\\nconst ScssConfigWebpackPlugin = require('scss-config-webpack-plugin');\\\\n\\\\nmodule.exports = {\\\\n  plugins: [\\\\n    // File loader configuration for .woff and .woff2 files\\\\n    // File loader configuration for .gif .jpg .jpeg .png and .svg files\\\\n    // https://github.com/namics/webpack-config-plugins/tree/master/packages/asset-config-webpack-plugin\\\\n    new AssetConfigWebpackPlugin(),\\\\n    // Cleans the dist folder before the build starts\\\\n    new CleanWebpackPlugin(['dist']),\\\\n    // Generate a base html file and injects all generated css and js files\\\\n    new HtmlWebpackPlugin(),\\\\n    // SCSS Configuration for .css .module.css and .scss .module.scss files\\\\n    // see https://github.com/namics/webpack-config-plugins/tree/master/packages/scss-config-webpack-plugin/config\\\\n    new ScssConfigWebpackPlugin(),\\\\n  ],\\\\n};\\\\n\\"
    },
    \\"babel.config.js\\": {
      \\"override\\": false,
      \\"data\\": \\"module.exports = {\\\\n\\\\tplugins: [\\\\n\\\\t\\\\t[\\\\n\\\\t\\\\t\\\\trequire.resolve('@babel/plugin-proposal-decorators'),\\\\n\\\\t\\\\t\\\\t{\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\\"legacy\\\\\\": true\\\\n\\\\t\\\\t\\\\t},\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t[\\\\n\\\\t\\\\t\\\\trequire.resolve('@babel/plugin-syntax-dynamic-import'),\\\\n\\\\t\\\\t],\\\\n\\\\t],\\\\n\\\\tpresets: [\\\\n\\\\t\\\\t[\\\\n\\\\t\\\\t\\\\trequire.resolve('@babel/preset-react'),\\\\n\\\\t\\\\t],\\\\n\\\\t\\\\t[\\\\n\\\\t\\\\t\\\\trequire.resolve('@babel/preset-env'),\\\\n\\\\t\\\\t\\\\t{\\\\n\\\\t\\\\t\\\\t\\\\tuseBuiltIns: 'entry'\\\\n\\\\t\\\\t\\\\t},\\\\n\\\\t\\\\t],\\\\n\\\\t],\\\\n};\\\\n\\"
    },
    \\"src/wait.js\\": {
      \\"override\\": false,
      \\"data\\": \\"\\\\n/**\\\\n * \\\\n * @param {number} delay - delay in milliseconds\\\\n * @returns {void}\\\\n */\\\\nexport async function wait(delay = 500) {\\\\n\\\\treturn new Promise((resolve) => setTimeout(resolve, delay));\\\\n};\\\\n\\"
    },
    \\"src/index.js\\": {
      \\"override\\": false,
      \\"data\\": \\"import '@babel/polyfill';\\\\n\\\\n(async () => {\\\\n\\\\t// dynamic import\\\\n\\\\tconst { wait } = await import(/* webpackChunkName: \\\\\\"wait\\\\\\" */ './wait');\\\\n\\\\tawait wait();\\\\n\\\\tdocument.write('@namics/frontend-defaults installed');\\\\n})();\\\\n\\"
    }
  }
}"
`;

exports[`webpack default 2`] = `
"module.exports = {
	plugins: [
		[
			require.resolve('@babel/plugin-proposal-decorators'),
			{
				\\"legacy\\": true
			},
		],
		[
			require.resolve('@babel/plugin-syntax-dynamic-import'),
		],
	],
	presets: [
		[
			require.resolve('@babel/preset-react'),
		],
		[
			require.resolve('@babel/preset-env'),
			{
				useBuiltIns: 'entry'
			},
		],
	],
};
"
`;

exports[`webpack default 3`] = `
"{
  \\"browserslist\\": [
    \\"> 1%\\",
    \\"last 2 versions\\",
    \\"not ie <= 10\\"
  ],
  \\"scripts\\": {
    \\"build\\": \\"webpack --mode production\\",
    \\"postinstall\\": \\"npm rebuild node-sass\\",
    \\"start\\": \\"webpack-dev-server --mode development\\"
  },
  \\"devDependencies\\": {
    \\"@babel/core\\": \\"7.4.3\\",
    \\"@babel/plugin-proposal-decorators\\": \\"7.4.0\\",
    \\"@babel/plugin-syntax-dynamic-import\\": \\"7.2.0\\",
    \\"@babel/preset-env\\": \\"7.4.3\\",
    \\"@babel/preset-react\\": \\"7.0.0\\",
    \\"asset-config-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"clean-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"html-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"scss-config-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"webpack\\": \\"0.1.0-mock\\",
    \\"webpack-cli\\": \\"0.1.0-mock\\",
    \\"webpack-dev-server\\": \\"0.1.0-mock\\"
  },
  \\"dependencies\\": {
    \\"@babel/polyfill\\": \\"7.4.3\\"
  }
}"
`;

exports[`webpack default 4`] = `
"const AssetConfigWebpackPlugin = require('asset-config-webpack-plugin');
const CleanWebpackPlugin = require('clean-webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const ScssConfigWebpackPlugin = require('scss-config-webpack-plugin');

module.exports = {
  plugins: [
    // File loader configuration for .woff and .woff2 files
    // File loader configuration for .gif .jpg .jpeg .png and .svg files
    // https://github.com/namics/webpack-config-plugins/tree/master/packages/asset-config-webpack-plugin
    new AssetConfigWebpackPlugin(),
    // Cleans the dist folder before the build starts
    new CleanWebpackPlugin(['dist']),
    // Generate a base html file and injects all generated css and js files
    new HtmlWebpackPlugin(),
    // SCSS Configuration for .css .module.css and .scss .module.scss files
    // see https://github.com/namics/webpack-config-plugins/tree/master/packages/scss-config-webpack-plugin/config
    new ScssConfigWebpackPlugin(),
  ],
};
"
`;

exports[`webpack webpack-with-ts 1`] = `
"{
  \\"options\\": {
    \\"ts\\": true,
    \\"typescriptEslint\\": false,
    \\"es\\": false,
    \\"eslint\\": false,
    \\"editorconfig\\": false,
    \\"prettier\\": false,
    \\"stylelint\\": false,
    \\"gitignore\\": false,
    \\"npmrc\\": false,
    \\"readme\\": false,
    \\"githooks\\": false,
    \\"commitlint\\": false,
    \\"nodeVersion\\": false,
    \\"webpack\\": true,
    \\"build\\": false,
    \\"install\\": false,
    \\"force\\": true,
    \\"dryRun\\": false,
    \\"mode\\": \\"api\\"
  },
  \\"mergedFiles\\": {
    \\"package.json\\": {
      \\"override\\": false,
      \\"data\\": {
        \\"devDependencies\\": {
          \\"@namics/ts-config\\": \\"0.2.0\\",
          \\"@types/core-js\\": \\"2.5.0\\",
          \\"asset-config-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"clean-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"html-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"scss-config-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"ts-config-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"typescript\\": \\"0.1.0-mock\\",
          \\"webpack\\": \\"0.1.0-mock\\",
          \\"webpack-cli\\": \\"0.1.0-mock\\",
          \\"webpack-dev-server\\": \\"0.1.0-mock\\"
        },
        \\"browserslist\\": [
          \\"> 1%\\",
          \\"last 2 versions\\",
          \\"not ie <= 10\\"
        ],
        \\"scripts\\": {
          \\"build\\": \\"webpack --mode production\\",
          \\"postinstall\\": \\"npm rebuild node-sass\\",
          \\"start\\": \\"webpack-dev-server --mode development\\"
        },
        \\"dependencies\\": {
          \\"core-js\\": \\"3.0.1\\"
        }
      }
    },
    \\"tsconfig.json\\": {
      \\"override\\": false,
      \\"data\\": \\"{\\\\n\\\\t\\\\\\"extends\\\\\\": \\\\\\"./node_modules/@namics/ts-config/tsconfig.json\\\\\\",\\\\n\\\\t\\\\\\"exclude\\\\\\": [\\\\\\"dist\\\\\\", \\\\\\"build\\\\\\", \\\\\\"node_modules\\\\\\", \\\\\\"__tests__\\\\\\"]\\\\n}\\\\n\\"
    },
    \\"webpack.config.js\\": {
      \\"override\\": false,
      \\"data\\": \\"const AssetConfigWebpackPlugin = require('asset-config-webpack-plugin');\\\\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\\\\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\\\\nconst ScssConfigWebpackPlugin = require('scss-config-webpack-plugin');\\\\nconst TsConfigWebpackPlugin = require('ts-config-webpack-plugin');\\\\n\\\\nmodule.exports = {\\\\n  plugins: [\\\\n    // File loader configuration for .woff and .woff2 files\\\\n    // File loader configuration for .gif .jpg .jpeg .png and .svg files\\\\n    // https://github.com/namics/webpack-config-plugins/tree/master/packages/asset-config-webpack-plugin\\\\n    new AssetConfigWebpackPlugin(),\\\\n    // Cleans the dist folder before the build starts\\\\n    new CleanWebpackPlugin(['dist']),\\\\n    // Generate a base html file and injects all generated css and js files\\\\n    new HtmlWebpackPlugin(),\\\\n    // SCSS Configuration for .css .module.css and .scss .module.scss files\\\\n    // see https://github.com/namics/webpack-config-plugins/tree/master/packages/scss-config-webpack-plugin/config\\\\n    new ScssConfigWebpackPlugin(),\\\\n    // Multi threading typescript loader configuration with caching for .ts and .tsx files\\\\n    // see https://github.com/namics/webpack-config-plugins/tree/master/packages/ts-config-webpack-plugin/config\\\\n    new TsConfigWebpackPlugin(),\\\\n  ],\\\\n};\\\\n\\"
    },
    \\"src/wait.ts\\": {
      \\"override\\": false,
      \\"data\\": \\"\\\\nexport async function wait(delay: number = 500) {\\\\n\\\\treturn new Promise((resolve) => setTimeout(resolve, delay));\\\\n};\\\\n\\"
    },
    \\"src/index.ts\\": {
      \\"override\\": false,
      \\"data\\": \\"import './polyfill';\\\\n\\\\n(async () => {\\\\n\\\\t// dynamic import\\\\n\\\\tconst { wait } = await import(/* webpackChunkName: \\\\\\"wait\\\\\\" */ './wait');\\\\n\\\\tawait wait();\\\\n\\\\tdocument.write('@namics/frontend-defaults installed');\\\\n})();\\\\n\\"
    },
    \\"src/polyfill.ts\\": {
      \\"override\\": false,
      \\"data\\": \\"\\\\n// https://github.com/zloirock/core-js/tree/v2\\\\n\\\\n// import required polyfills here\\\\nimport 'core-js/features/promise'; \\\\n\\"
    }
  }
}"
`;

exports[`webpack webpack-with-ts 2`] = `
"{
  \\"devDependencies\\": {
    \\"@namics/ts-config\\": \\"0.2.0\\",
    \\"@types/core-js\\": \\"2.5.0\\",
    \\"asset-config-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"clean-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"html-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"scss-config-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"ts-config-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"typescript\\": \\"0.1.0-mock\\",
    \\"webpack\\": \\"0.1.0-mock\\",
    \\"webpack-cli\\": \\"0.1.0-mock\\",
    \\"webpack-dev-server\\": \\"0.1.0-mock\\"
  },
  \\"browserslist\\": [
    \\"> 1%\\",
    \\"last 2 versions\\",
    \\"not ie <= 10\\"
  ],
  \\"scripts\\": {
    \\"build\\": \\"webpack --mode production\\",
    \\"postinstall\\": \\"npm rebuild node-sass\\",
    \\"start\\": \\"webpack-dev-server --mode development\\"
  },
  \\"dependencies\\": {
    \\"core-js\\": \\"3.0.1\\"
  }
}"
`;

exports[`webpack webpack-with-ts 3`] = `
"{
	\\"extends\\": \\"./node_modules/@namics/ts-config/tsconfig.json\\",
	\\"exclude\\": [\\"dist\\", \\"build\\", \\"node_modules\\", \\"__tests__\\"]
}
"
`;

exports[`webpack webpack-with-ts 4`] = `
"const AssetConfigWebpackPlugin = require('asset-config-webpack-plugin');
const CleanWebpackPlugin = require('clean-webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const ScssConfigWebpackPlugin = require('scss-config-webpack-plugin');
const TsConfigWebpackPlugin = require('ts-config-webpack-plugin');

module.exports = {
  plugins: [
    // File loader configuration for .woff and .woff2 files
    // File loader configuration for .gif .jpg .jpeg .png and .svg files
    // https://github.com/namics/webpack-config-plugins/tree/master/packages/asset-config-webpack-plugin
    new AssetConfigWebpackPlugin(),
    // Cleans the dist folder before the build starts
    new CleanWebpackPlugin(['dist']),
    // Generate a base html file and injects all generated css and js files
    new HtmlWebpackPlugin(),
    // SCSS Configuration for .css .module.css and .scss .module.scss files
    // see https://github.com/namics/webpack-config-plugins/tree/master/packages/scss-config-webpack-plugin/config
    new ScssConfigWebpackPlugin(),
    // Multi threading typescript loader configuration with caching for .ts and .tsx files
    // see https://github.com/namics/webpack-config-plugins/tree/master/packages/ts-config-webpack-plugin/config
    new TsConfigWebpackPlugin(),
  ],
};
"
`;

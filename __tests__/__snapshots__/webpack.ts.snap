// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`webpack default 1`] = `
"{
	\\"presets\\": [
	  \\"env\\"
	]
}"
`;

exports[`webpack default 2`] = `
"{
  \\"options\\": {
    \\"ts\\": false,
    \\"tslint\\": false,
    \\"es\\": false,
    \\"eslint\\": false,
    \\"editorconfig\\": false,
    \\"prettier\\": false,
    \\"stylelint\\": false,
    \\"gitignore\\": false,
    \\"npmrc\\": false,
    \\"readme\\": false,
    \\"githooks\\": false,
    \\"commitlint\\": false,
    \\"nodeVersion\\": false,
    \\"webpack\\": true,
    \\"install\\": false,
    \\"force\\": true,
    \\"dryRun\\": false,
    \\"mode\\": \\"api\\"
  },
  \\"mergedFiles\\": {
    \\"package.json\\": {
      \\"override\\": false,
      \\"data\\": {
        \\"devDependencies\\": {
          \\"@babel/core\\": \\"0.1.0-mock\\",
          \\"@babel/preset-env\\": \\"0.1.0-mock\\",
          \\"@babel/preset-react\\": \\"0.1.0-mock\\",
          \\"asset-config-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"babel\\": \\"6.23.0\\",
          \\"babel-preset-react-app\\": \\"7.0.0\\",
          \\"clean-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"html-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"js-config-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"scss-config-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"webpack\\": \\"0.1.0-mock\\",
          \\"webpack-cli\\": \\"0.1.0-mock\\",
          \\"webpack-dev-server\\": \\"0.1.0-mock\\"
        },
        \\"browserslist\\": [
          \\"> 1%\\",
          \\"last 2 versions\\",
          \\"not ie <= 10\\"
        ],
        \\"scripts\\": {
          \\"build\\": \\"webpack --mode production\\",
          \\"postinstall\\": \\"npm rebuild node-sass\\",
          \\"start\\": \\"webpack-dev-server --mode development\\"
        }
      }
    },
    \\"src/index.js\\": {
      \\"override\\": false,
      \\"data\\": \\"\\\\n// eslint-disable-next-line\\\\nconsole.log('@namics/frontend-defaults installed');\\\\n\\"
    },
    \\"webpack.config.js\\": {
      \\"override\\": false,
      \\"data\\": \\"const AssetConfigWebpackPlugin = require('asset-config-webpack-plugin');\\\\nconst CleanWebpackPlugin = require('clean-webpack-plugin');\\\\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\\\\nconst JsConfigWebpackPlugin = require('js-config-webpack-plugin');\\\\nconst ScssConfigWebpackPlugin = require('scss-config-webpack-plugin');\\\\n\\\\nmodule.exports = {\\\\n  plugins: [\\\\n    // File loader configuration for .woff and .woff2 files\\\\n    // File loader configuration for .gif .jpg .jpeg .png and .svg files\\\\n    // https://github.com/namics/webpack-config-plugins/tree/master/packages/asset-config-webpack-plugin\\\\n    new AssetConfigWebpackPlugin(),\\\\n    // Cleans the dist folder before the build starts\\\\n    new CleanWebpackPlugin(['dist']),\\\\n    // Generate a base html file and injects all generated css and js files\\\\n    new HtmlWebpackPlugin(),\\\\n    // Multi threading babel loader configuration with caching for .js and .jsx files\\\\n    // see https://github.com/namics/webpack-config-plugins/tree/master/packages/js-config-webpack-plugin/config\\\\n    new JsConfigWebpackPlugin(),\\\\n    // SCSS Configuration for .css .module.css and .scss .module.scss files\\\\n    // see https://github.com/namics/webpack-config-plugins/tree/master/packages/scss-config-webpack-plugin/config\\\\n    new ScssConfigWebpackPlugin(),\\\\n  ],\\\\n};\\\\n\\"
    },
    \\".babelrc\\": {
      \\"override\\": false,
      \\"data\\": \\"{\\\\n\\\\t\\\\\\"presets\\\\\\": [\\\\n\\\\t  \\\\\\"env\\\\\\"\\\\n\\\\t]\\\\n}\\"
    }
  }
}"
`;

exports[`webpack default 3`] = `
"{
  \\"devDependencies\\": {
    \\"@babel/core\\": \\"0.1.0-mock\\",
    \\"@babel/preset-env\\": \\"0.1.0-mock\\",
    \\"@babel/preset-react\\": \\"0.1.0-mock\\",
    \\"asset-config-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"babel\\": \\"6.23.0\\",
    \\"babel-preset-react-app\\": \\"7.0.0\\",
    \\"clean-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"html-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"js-config-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"scss-config-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"webpack\\": \\"0.1.0-mock\\",
    \\"webpack-cli\\": \\"0.1.0-mock\\",
    \\"webpack-dev-server\\": \\"0.1.0-mock\\"
  },
  \\"browserslist\\": [
    \\"> 1%\\",
    \\"last 2 versions\\",
    \\"not ie <= 10\\"
  ],
  \\"scripts\\": {
    \\"build\\": \\"webpack --mode production\\",
    \\"postinstall\\": \\"npm rebuild node-sass\\",
    \\"start\\": \\"webpack-dev-server --mode development\\"
  }
}"
`;

exports[`webpack default 4`] = `
"const AssetConfigWebpackPlugin = require('asset-config-webpack-plugin');
const CleanWebpackPlugin = require('clean-webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const JsConfigWebpackPlugin = require('js-config-webpack-plugin');
const ScssConfigWebpackPlugin = require('scss-config-webpack-plugin');

module.exports = {
  plugins: [
    // File loader configuration for .woff and .woff2 files
    // File loader configuration for .gif .jpg .jpeg .png and .svg files
    // https://github.com/namics/webpack-config-plugins/tree/master/packages/asset-config-webpack-plugin
    new AssetConfigWebpackPlugin(),
    // Cleans the dist folder before the build starts
    new CleanWebpackPlugin(['dist']),
    // Generate a base html file and injects all generated css and js files
    new HtmlWebpackPlugin(),
    // Multi threading babel loader configuration with caching for .js and .jsx files
    // see https://github.com/namics/webpack-config-plugins/tree/master/packages/js-config-webpack-plugin/config
    new JsConfigWebpackPlugin(),
    // SCSS Configuration for .css .module.css and .scss .module.scss files
    // see https://github.com/namics/webpack-config-plugins/tree/master/packages/scss-config-webpack-plugin/config
    new ScssConfigWebpackPlugin(),
  ],
};
"
`;

exports[`webpack webpack-with-ts 1`] = `
"{
	\\"presets\\": [
	  \\"env\\"
	]
}"
`;

exports[`webpack webpack-with-ts 2`] = `
"{
  \\"options\\": {
    \\"ts\\": true,
    \\"tslint\\": false,
    \\"es\\": false,
    \\"eslint\\": false,
    \\"editorconfig\\": false,
    \\"prettier\\": false,
    \\"stylelint\\": false,
    \\"gitignore\\": false,
    \\"npmrc\\": false,
    \\"readme\\": false,
    \\"githooks\\": false,
    \\"commitlint\\": false,
    \\"nodeVersion\\": false,
    \\"webpack\\": true,
    \\"install\\": false,
    \\"force\\": true,
    \\"dryRun\\": false,
    \\"mode\\": \\"api\\"
  },
  \\"mergedFiles\\": {
    \\"package.json\\": {
      \\"override\\": false,
      \\"data\\": {
        \\"devDependencies\\": {
          \\"@namics/ts-config\\": \\"0.1.0\\",
          \\"babel\\": \\"6.23.0\\",
          \\"babel-preset-react-app\\": \\"7.0.0\\",
          \\"clean-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"common-config-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"html-webpack-plugin\\": \\"0.1.0-mock\\",
          \\"typescript\\": \\"3.1.3\\",
          \\"webpack\\": \\"0.1.0-mock\\",
          \\"webpack-cli\\": \\"0.1.0-mock\\",
          \\"webpack-dev-server\\": \\"0.1.0-mock\\"
        },
        \\"browserslist\\": [
          \\"> 1%\\",
          \\"last 2 versions\\",
          \\"not ie <= 10\\"
        ],
        \\"scripts\\": {
          \\"build\\": \\"webpack --mode production\\",
          \\"postinstall\\": \\"npm rebuild node-sass\\",
          \\"start\\": \\"webpack-dev-server --mode development\\"
        }
      }
    },
    \\"tsconfig.json\\": {
      \\"override\\": false,
      \\"data\\": \\"{\\\\n\\\\t\\\\\\"extends\\\\\\": \\\\\\"./node_modules/@namics/ts-config/tsconfig.json\\\\\\",\\\\n\\\\t\\\\\\"exclude\\\\\\": [\\\\\\"dist\\\\\\", \\\\\\"build\\\\\\", \\\\\\"node_modules\\\\\\", \\\\\\"__tests__\\\\\\"]\\\\n}\\\\n\\"
    },
    \\"src/index.ts\\": {
      \\"override\\": false,
      \\"data\\": \\"\\\\n// tslint:disable-next-line\\\\nconsole.log('@namics/frontend-defaults installed');\\\\n\\"
    },
    \\"webpack.config.js\\": {
      \\"override\\": false,
      \\"data\\": \\"const CleanWebpackPlugin = require('clean-webpack-plugin');\\\\nconst CommonConfigWebpackPlugin = require('common-config-webpack-plugin');\\\\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\\\\n\\\\nmodule.exports = {\\\\n  plugins: [\\\\n    // Cleans the dist folder before the build starts\\\\n    new CleanWebpackPlugin(['dist']),\\\\n    // Multi threading babel loader configuration with caching for .js and .jsx files\\\\n    // Multi threading typescript loader configuration with caching for .ts and .tsx files\\\\n    // SCSS Configuration for .css .module.css and .scss .module.scss files\\\\n    // File loader configuration for .woff and .woff2 files\\\\n    // File loader configuration for .gif .jpg .jpeg .png and .svg files\\\\n    // https://github.com/namics/webpack-config-plugins/\\\\n    new CommonConfigWebpackPlugin(),\\\\n    // Generate a base html file and injects all generated css and js files\\\\n    new HtmlWebpackPlugin(),\\\\n  ],\\\\n};\\\\n\\"
    },
    \\".babelrc\\": {
      \\"override\\": false,
      \\"data\\": \\"{\\\\n\\\\t\\\\\\"presets\\\\\\": [\\\\n\\\\t  \\\\\\"env\\\\\\"\\\\n\\\\t]\\\\n}\\"
    }
  }
}"
`;

exports[`webpack webpack-with-ts 3`] = `
"{
  \\"devDependencies\\": {
    \\"@namics/ts-config\\": \\"0.1.0\\",
    \\"babel\\": \\"6.23.0\\",
    \\"babel-preset-react-app\\": \\"7.0.0\\",
    \\"clean-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"common-config-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"html-webpack-plugin\\": \\"0.1.0-mock\\",
    \\"typescript\\": \\"3.1.3\\",
    \\"webpack\\": \\"0.1.0-mock\\",
    \\"webpack-cli\\": \\"0.1.0-mock\\",
    \\"webpack-dev-server\\": \\"0.1.0-mock\\"
  },
  \\"browserslist\\": [
    \\"> 1%\\",
    \\"last 2 versions\\",
    \\"not ie <= 10\\"
  ],
  \\"scripts\\": {
    \\"build\\": \\"webpack --mode production\\",
    \\"postinstall\\": \\"npm rebuild node-sass\\",
    \\"start\\": \\"webpack-dev-server --mode development\\"
  }
}"
`;

exports[`webpack webpack-with-ts 4`] = `
"{
	\\"extends\\": \\"./node_modules/@namics/ts-config/tsconfig.json\\",
	\\"exclude\\": [\\"dist\\", \\"build\\", \\"node_modules\\", \\"__tests__\\"]
}
"
`;

exports[`webpack webpack-with-ts 5`] = `
"const CleanWebpackPlugin = require('clean-webpack-plugin');
const CommonConfigWebpackPlugin = require('common-config-webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = {
  plugins: [
    // Cleans the dist folder before the build starts
    new CleanWebpackPlugin(['dist']),
    // Multi threading babel loader configuration with caching for .js and .jsx files
    // Multi threading typescript loader configuration with caching for .ts and .tsx files
    // SCSS Configuration for .css .module.css and .scss .module.scss files
    // File loader configuration for .woff and .woff2 files
    // File loader configuration for .gif .jpg .jpeg .png and .svg files
    // https://github.com/namics/webpack-config-plugins/
    new CommonConfigWebpackPlugin(),
    // Generate a base html file and injects all generated css and js files
    new HtmlWebpackPlugin(),
  ],
};
"
`;
